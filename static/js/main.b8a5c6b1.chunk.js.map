{"version":3,"sources":["components/CrucibleList.module.css","lens/outcomeTable.js","lens/PRNG.js","components/Crucible.jsx","lens/logBaseN.js","components/CrucibleList.jsx","crucibleData/convertTokenIdToAddress.js","crucibleData/contracts/contracts.js","crucibleData/getContract.js","crucibleData/getCrucibleIdsFromEvents.js","crucibleData/throttler.js","crucibleData/getAllCrucibleIds.js","crucibleData/getCrucibleData.js","crucibleData/getCrucibleDataForAccount.js","crucibleData/crucibleDataStore.js","App.js","reportWebVitals.js","index.js","components/Crucible.module.css","App.module.css","lens/xorshift.js"],"names":["module","exports","outcomeTable","getTotalWeighting","table","total","weighting","pickOutcome","rn","runningWeighting","outcome","Error","PRNG","seedData","trimmedSeedData","startsWith","slice","this","_seeds","length","seedHexString","push","parseInt","_startSeedIndex","_prngs","channelName","outcomeCount","Number","MAX_SAFE_INTEGER","_createPRNG","random","Math","floor","seeds","i","seedIndex","XorShift","Crucible","data","id","owner","timestamp","lockedBalance","formatUnits","toString","err","base","num","date","Date","balanceScaled","div","toNumber","log","prng","mainHues","hueCount","randomInt","alchemicalSymbolsTotalWeighting","alchemicalSymbols","symbols","count","symbol","hueJitter","randomFloat","hueBase","saturation","min","lightness","color","mainSymbol","shift","animationPeriod","pickedAdjective","adjective","pickedNoun","noun","pickedProperNoun","properNoun","name","className","styles","main","lensContainer","lensBackgroundContainer","style","opacity","lensBackground","backgroundColor","boxShadow","animationDuration","transform","rotate","map","t","PI","x","cos","y","sin","top","left","symbolMain","stats","toDateString","CrucibleList","crucibles","passedRef","onScroll","ref","crucible","convertTokenIdToAddress","tokenId","BigNumber","from","toHexString","padStart","contracts","address","abi","CrucibleFactory","LPToken","Aludel","Transmuter","getContract","provider","ethers","Contract","getCrucibleIdsFromEvents","events","withEvent","handledIds","Set","crucibleIds","event","args","has","add","console","error","Throttler","options","_maxConcurrentPromises","maxConcurrentPromises","_retryAttempts","retryAttempts","_queue","_activePromises","_shiftTimeoutId","promiseGenerator","Promise","resolve","reject","_tryToShiftQueue","setTimeout","_tryToExecute","item","a","remainingAttempts","ret","_channelDefault","_channels","channel","throttler","queue","providers","Web3Provider","window","ethereum","crucibleFactory","getAllCrucibleIds","filter","filters","Transfer","queryFilter","crucibleEvents","isError","obj","Object","prototype","call","getTimestamp","JSON","stringify","getBlock","block","getCrucibleData","ownerPromise","ownerOf","catch","lockedBalancePromise","getBalanceLocked","timestampPromise","all","resolveValues","resolveValue","getCrucibleDataFunc","_unloadedCrucibleIds","_pendingLoadPromises","Map","_loadedCrucibles","_erroredCrucibles","_callbacks","_initPromise","_init","size","unloadedCount","pendingCount","loadedCount","callback","delete","idOrObject","get","loadPromise","then","set","Array","values","sort","b","getCrucibleDataForAccount","bind","accountCrucibles","ids","crucibleDataStore","url","URL","location","href","targetAddress","searchParams","updateUrl","history","replaceState","App","crucibleListRef","useRef","inputRef","useState","setCrucibles","filterAddress","setFilterAddress","checkShouldLoad","current","scrollHeight","scrollTop","clientHeight","innerHeight","extraCount","load","useEffect","getCrucibleDataForAccountOrCrucibleAddress","crucibleLoadedCallback","getAllLoadedCrucibleData","addCrucibleLoadedCallback","removeCrucibleLoadedCallback","header","input","type","onChange","e","target","value","placeholder","clearButton","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","seed","isArray","TypeError","_state0U","_state0L","_state1U","_state1L","randomint","s1U","s1L","s0U","s0L","sumL","resU","resL","t1U","t1L","t2"],"mappings":"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","file":"static/js/main.b8a5c6b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"CrucibleList_main__z5q3f\"};","const outcomeTable = {\r\n\tgetTotalWeighting(table) {\r\n\t\tlet total = 0;\r\n\t\tfor (const {weighting} of table) {\r\n\t\t\ttotal += weighting;\r\n\t\t}\r\n\t\treturn total;\r\n\t},\r\n\tpickOutcome(table, rn) {\r\n\t\tlet runningWeighting = 0;\r\n\t\tfor (const outcome of table) {\r\n\t\t\trunningWeighting += outcome.weighting;\r\n\t\t\tif (rn < runningWeighting) {\r\n\t\t\t\treturn outcome;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error('Random number pick exceeds total weighting of outcome table');\r\n\t}\r\n};\r\n\r\nexport default outcomeTable;\r\n","import XorShift from './xorshift.js';\r\n\r\nexport default class PRNG {\r\n\tconstructor(seedData) {\r\n\t\t// seedData is expected to the Crucible tokenId in hex form\r\n\t\t// This is 160bits of data, so we need to break it into five 32bit integers of which four will be used to seed a PRNG instance\r\n\t\t// Ideally some clever chap can find a PRNG that takes 160bit seed but I am not that chap\r\n\t\t// We'll make do by seeding multiple PRNG instances with different subsets of the five seeds, it kinda works...\r\n\t\tlet trimmedSeedData = seedData;\r\n\t\tif (seedData.startsWith('0x')) {\r\n\t\t\ttrimmedSeedData = seedData.slice(2);\r\n\t\t}\r\n\t\tthis._seeds = [];\r\n\t\twhile (this._seeds.length < 5) {\r\n\t\t\tif (trimmedSeedData.length > 0) {\r\n\t\t\t\t// In hex format 32 bits are 8 characters\r\n\t\t\t\tconst seedHexString = trimmedSeedData.slice(-8);\r\n\t\t\t\ttrimmedSeedData = trimmedSeedData.slice(0, -8);\r\n\t\t\t\tthis._seeds.push(parseInt(seedHexString, 16));\r\n\t\t\t} else {\r\n\t\t\t\t// Rare tokenId with lots of leading zeroes I guess\r\n\t\t\t\tthis._seeds.push(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// We'll increment this for each PRNG instance we make, and use it to pick the starting seed\r\n\t\tthis._startSeedIndex = 0;\r\n\t\tthis._prngs = {};\r\n\t}\r\n\r\n\trandomInt(channelName, outcomeCount = Number.MAX_SAFE_INTEGER) {\r\n\t\tif (!this._prngs[channelName]) {\r\n\t\t\tthis._createPRNG(channelName);\r\n\t\t}\r\n\t\t// Probably needs to use .randomint but I can't be bothered to figure out doing it correctly right now\r\n\t\tconst rn = this._prngs[channelName].random();\r\n\t\treturn Math.floor(rn * outcomeCount);\r\n\t}\r\n\r\n\trandomFloat(channelName) {\r\n\t\treturn this._prngs[channelName].random();\r\n\t}\r\n\r\n\t_createPRNG(channelName) {\r\n\t\tconst seeds = [];\r\n\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\tconst seedIndex = (this._startSeedIndex + i) % this._seeds.length;\r\n\t\t\tseeds.push(this._seeds[seedIndex]);\r\n\t\t}\r\n\t\tthis._startSeedIndex = (this._startSeedIndex + 1) % this._seeds.length;\r\n\t\tthis._prngs[channelName] = new XorShift(seeds);\r\n\t}\r\n}","import {formatUnits} from \"ethers/lib/utils\";\r\nimport React from 'react';\r\nimport adjective from '../lens/equalOddsTables/adjective.json';\r\nimport noun from '../lens/equalOddsTables/noun.json';\r\nimport properNoun from '../lens/equalOddsTables/properNoun.json';\r\nimport logBaseN from '../lens/logBaseN.js';\r\nimport outcomeTable from '../lens/outcomeTable.js';\r\nimport alchemicalSymbols from '../lens/outcomeTables/alchemicalSymbols.json';\r\nimport PRNG from '../lens/PRNG.js';\r\nimport styles from './Crucible.module.css';\r\n\r\nexport default function Crucible({data}) {\r\n\tconst {\r\n\t\tid,\r\n\t\towner,\r\n\t\ttimestamp\r\n\t} = data;\r\n\r\n\tlet lockedBalance = 0;\r\n\ttry {\r\n\t\tlockedBalance = formatUnits(data.lockedBalance.toString());\r\n\t} catch (err) {\r\n\t\t// don't care\r\n\t}\r\n\r\n\tconst date = new Date(timestamp);\r\n\r\n\t// Use log scaling to bring a wide range of balance values into something we can use linearly\r\n\t// lockedBalance is usually too big to convert to JS Number, requires dividing by 1e18 to be expressed in ETH magnitude units too\r\n\t// .div(1e18) fails because 1e18 is too big for JS, but .div(1e9).div(1e9) works\r\n\t// Only .div(1e9).div(1e9) doesn't work because the division truncates decimals, causing the final output to be rounded\r\n\t// We can work around this by dividing once by 1e9 to bring it into range that JS Numbers can handle it, then do the second division in JS Numbers\r\n\t// This preserves a reasonable number of decimal values to suit our purposes\r\n\tconst balanceScaled = logBaseN(2, ((data.lockedBalance.div(1e9).toNumber()) / 1e9) + 1);\r\n\r\n\tconst prng = new PRNG(id);\r\n\tconst mainHues = [];\r\n\tlet hueCount = 1 + prng.randomInt('colors', 3);\r\n\twhile (hueCount) {\r\n\t\thueCount--;\r\n\t\tmainHues.push(prng.randomInt('colors', 360));\r\n\t}\r\n\r\n\tconst alchemicalSymbolsTotalWeighting = outcomeTable.getTotalWeighting(alchemicalSymbols);\r\n\tlet symbols = [];\r\n\tlet count = 9 + prng.randomInt('structure', 4);\r\n\twhile (count) {\r\n\t\tcount--;\r\n\t\tconst rn = prng.randomInt('structure', alchemicalSymbolsTotalWeighting);\r\n\t\tconst symbol = outcomeTable.pickOutcome(alchemicalSymbols, rn).symbol;\r\n\t\tconst hueJitter = Math.floor((60 / (1 + balanceScaled)) * (0.5 - prng.randomFloat('colors')));\r\n\t\tconst hueBase = mainHues[prng.randomInt('colors', mainHues.length)];\r\n\t\tconst saturation = 20 + (4 * balanceScaled) + Math.min(prng.randomInt('colors', 50), 100);\r\n\t\tconst lightness = 5 + (3 * balanceScaled) + Math.min(prng.randomInt('colors', 15), 50);\r\n\t\tconst color = `hsl(${hueBase + hueJitter}deg ${saturation}% ${lightness}%)`;\r\n\t\tsymbols.push({symbol, color});\r\n\t}\r\n\tconst mainSymbol = symbols.shift();\r\n\r\n\tconst animationPeriod = balanceScaled > 0 ? 20 / balanceScaled : 0;\r\n\r\n\tconst pickedAdjective = adjective[prng.randomInt('name', adjective.length)];\r\n\tconst pickedNoun = noun[prng.randomInt('name', noun.length)];\r\n\tconst pickedProperNoun = properNoun[prng.randomInt('name', properNoun.length)];\r\n\tconst name = `${pickedAdjective} ${pickedNoun} of ${pickedProperNoun}`;\r\n\r\n\treturn (\r\n\t\t<div className={styles.main}>\r\n\t\t\t<div className={styles.lensContainer}>\r\n\t\t\t\t<div className={styles.lensBackgroundContainer} style={{opacity: 0.75 + (balanceScaled / 30)}}>\r\n\t\t\t\t\t<div className={styles.lensBackground} style={{\r\n\t\t\t\t\t\tbackgroundColor: mainSymbol.color,\r\n\t\t\t\t\t\tboxShadow: `0 0 8vh 8vh ${mainSymbol.color}`,\r\n\t\t\t\t\t\tanimationDuration: `${animationPeriod}s`,\r\n\t\t\t\t\t\ttransform: `translate(-50%, -50%) scale(${0.75 + (balanceScaled / 30)})`\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.rotate} style={{animationDuration: `${animationPeriod}s`}}>\r\n\t\t\t\t\t{symbols.map(({symbol, color}, i) => {\r\n\t\t\t\t\t\tconst r = 100;\r\n\t\t\t\t\t\tconst t = 2 * Math.PI * (i / symbols.length);\r\n\t\t\t\t\t\tconst x = Math.cos(t) * r;\r\n\t\t\t\t\t\tconst y = Math.sin(t) * r;\r\n\t\t\t\t\t\tconst style = {\r\n\t\t\t\t\t\t\ttop: `${y}px`,\r\n\t\t\t\t\t\t\tleft: `${x}px`,\r\n\t\t\t\t\t\t\ttransform: `translate(-50%, -50%) rotate(${t - (Math.PI / 2)}rad)`,\r\n\t\t\t\t\t\t\tcolor: color\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treturn <div key={i} className={styles.symbol} style={style}>{symbol}</div>\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.symbolMain} style={{color: mainSymbol.color}}>{mainSymbol.symbol}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.stats}>\r\n\t\t\t\t<div>Name: {name}</div>\r\n\t\t\t\t<div>ID: {id}</div>\r\n\t\t\t\t<div>Owner: {owner}</div>\r\n\t\t\t\t<div>Locked Balance: {lockedBalance}</div>\r\n\t\t\t\t<div>Timestamp: {timestamp}</div>\r\n\t\t\t\t<div>Date: {date.toDateString()}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","export default function logBaseN(base, num) {\r\n\treturn Math.log(num) / Math.log(base);\r\n};\r\n","import React from 'react';\r\nimport Crucible from './Crucible.jsx';\r\nimport styles from './CrucibleList.module.css';\r\n\r\nexport default function CrucibleList({crucibles, passedRef, onScroll}) {\r\n\treturn (\r\n\t\t<div className={styles.main} ref={passedRef} onScroll={onScroll}>\r\n\t\t\t{crucibles.map((crucible) => {\r\n\t\t\t\treturn <Crucible key={crucible.id} data={crucible}/>\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import {BigNumber} from 'ethers';\r\n\r\nexport default function convertTokenIdToAddress(tokenId) {\r\n\tlet id = BigNumber.from(tokenId).toHexString();\r\n\tif (id.length < 42) {\r\n\t\tid = '0x' + id.slice(2).padStart(40, '0');\r\n\t}\r\n\treturn id;\r\n}\r\n","import Aludel from './AludelABI.json';\nimport Crucible from './CrucibleABI.json';\nimport CrucibleFactory from './CrucibleFactoryABI.json';\nimport LPToken from './LPTokenABI.json';\nimport Transmuter from './TransmuterABI.json';\n\nconst contracts = {\n\tCrucible: {\n\t\taddress: '0xCF576F74BA3B01CDC04E04305055446D1649BD07',\n\t\tabi: Crucible\n\t},\n\tCrucibleFactory: {\n\t\taddress: '0x54e0395CFB4f39beF66DBCd5bD93Cca4E9273D56',\n\t\tabi: CrucibleFactory\n\t},\n\tLPToken: {\n\t\taddress: '0xCD6bcca48069f8588780dFA274960F15685aEe0e',\n\t\tabi: LPToken\n\t},\n\tAludel: {\n\t\taddress: '0xf0D415189949d913264A454F57f4279ad66cB24d',\n\t\tabi: Aludel\n\t},\n\tTransmuter: {\n\t\taddress: '0xB772ce9f14FC7C7db0D4525aDb9349FBD7ce456a',\n\t\tabi: Transmuter\n\t}\n};\n\nexport default contracts;\n","import {ethers} from 'ethers';\r\n\r\nexport default function getContract({address, abi}, provider) {\r\n\treturn new ethers.Contract(address, abi, provider);\r\n}\r\n","import convertTokenIdToAddress from './convertTokenIdToAddress.js';\r\n\r\nexport default function getCrucibleIdsFromEvents(events, withEvent) {\r\n\tconst handledIds = new Set();\r\n\tconst crucibleIds = [];\r\n\tfor (const event of events) {\r\n\t\tif (!event.args.tokenId) {\r\n\t\t\tconsole.error(`Missing tokenId arg`, event);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst id = convertTokenIdToAddress(event.args.tokenId);\r\n\t\tif (!handledIds.has(id)) {\r\n\t\t\thandledIds.add(id);\r\n\t\t\tcrucibleIds.push(withEvent ? {id, event} : id);\r\n\t\t}\r\n\t}\r\n\treturn crucibleIds;\r\n};\r\n","class Throttler {\r\n\tconstructor(options = {}) {\r\n\t\tthis._maxConcurrentPromises = options.maxConcurrentPromises || 20;\r\n\t\tthis._retryAttempts = options.retryAttempts || 5;\r\n\t\tthis._queue = [];\r\n\t\tthis._activePromises = 0;\r\n\t\tthis._shiftTimeoutId = null;\r\n\t}\r\n\r\n\tqueue(promiseGenerator) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._queue.push({\r\n\t\t\t\tpromiseGenerator,\r\n\t\t\t\tresolve,\r\n\t\t\t\treject\r\n\t\t\t});\r\n\t\t\tthis._tryToShiftQueue();\r\n\t\t});\r\n\t}\r\n\r\n\t_tryToShiftQueue() {\r\n\t\tif (this._shiftTimeoutId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._shiftTimeoutId = setTimeout(() => {\r\n\t\t\tthis._shiftTimeoutId = null;\r\n\t\t\twhile (this._activePromises < this._maxConcurrentPromises && this._queue.length) {\r\n\t\t\t\tthis._activePromises++;\r\n\t\t\t\tthis._tryToExecute(this._queue.shift());\r\n\t\t\t}\r\n\t\t\tif (this._queue.length) {\r\n\t\t\t\tthis._tryToShiftQueue();\r\n\t\t\t}\r\n\t\t}, 1);\r\n\t}\r\n\r\n\tasync _tryToExecute(item, remainingAttempts = this._retryAttempts) {\r\n\t\ttry {\r\n\t\t\tconst ret = await item.promiseGenerator();\r\n\t\t\tthis._activePromises--;\r\n\t\t\titem.resolve(ret);\r\n\t\t\tthis._tryToShiftQueue();\r\n\t\t} catch (err) {\r\n\t\t\tif (remainingAttempts > 0) {\r\n\t\t\t\tthis._tryToExecute(item, --remainingAttempts);\r\n\t\t\t} else {\r\n\t\t\t\tthis._activePromises--;\r\n\t\t\t\titem.reject(err);\r\n\t\t\t\tthis._tryToShiftQueue();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass MultiChannelThrottler {\r\n\tconstructor() {\r\n\t\tthis._channelDefault = new Throttler({maxConcurrentPromises: 20, retryAttempts: 1});\r\n\t\tthis._channels = {};\r\n\t}\r\n\r\n\tqueue(promiseGenerator, channel) {\r\n\t\tlet throttler = this._channelDefault;\r\n\t\tif (channel) {\r\n\t\t\tif (!this._channels[channel]) {\r\n\t\t\t\tthis._channels[channel] = new Throttler({maxConcurrentPromises: 2, retryAttempts: 1});\r\n\t\t\t}\r\n\t\t\tthrottler = this._channels[channel];\r\n\t\t}\r\n\t\treturn throttler.queue(promiseGenerator);\r\n\t}\r\n}\r\n\r\nexport default new MultiChannelThrottler();\r\n","import {ethers} from 'ethers';\r\nimport contracts from './contracts/contracts.js';\r\nimport getContract from './getContract.js';\r\nimport getCrucibleIdsFromEvents from './getCrucibleIdsFromEvents.js';\r\nimport throttler from './throttler.js';\r\n\r\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\r\nconst crucibleFactory = getContract(contracts.CrucibleFactory, provider);\r\n\r\nexport default async function getAllCrucibleIds(withEvent = false) {\r\n\t// All Crucibles undergo a Transfer event from the Transmuter address at the time of their creation\r\n\t// Thus, we can filter for this to pick up the IDs of every Crucible\r\n\tconst filter = crucibleFactory.filters.Transfer(contracts.Transmuter.address, null);\r\n\tconst crucibleEvents = await throttler.queue(() => {\r\n\t\treturn crucibleFactory.queryFilter(filter, 0, \"latest\");\r\n\t}, 'events');\r\n\treturn getCrucibleIdsFromEvents(crucibleEvents, withEvent);\r\n}\r\n","import {ethers} from 'ethers';\r\nimport contracts from './contracts/contracts.js';\r\nimport getContract from './getContract.js';\r\nimport throttler from './throttler.js';\r\n\r\n// Stuff that's commented out can be enabled if desired but the lockedBalance is likely what you actually want to use\r\n// Keeping the unused stuff commented out reduces network load\r\n\r\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\r\nconst crucibleFactory = getContract(contracts.CrucibleFactory, provider);\r\n// const lpToken = getContract(contracts.LPToken, provider);\r\n\r\nfunction isError(obj) {\r\n\treturn Object.prototype.toString.call(obj) === \"[object Error]\";\r\n}\r\n\r\nasync function getTimestamp(id) {\r\n\t// Filter for Transfer event when Crucible was created, third parameter being the tokenId to target just the one event\r\n\tconst filter = crucibleFactory.filters.Transfer(contracts.Transmuter.address, null, id);\r\n\tconst crucibleEvents = await throttler.queue(() => {\r\n\t\treturn crucibleFactory.queryFilter(filter, 0, \"latest\");\r\n\t});\r\n\tif (crucibleEvents.length > 1) {\r\n\t\tthrow new Error(`Got more than one minting event:\\n${JSON.stringify(crucibleEvents)}`);\r\n\t}\r\n\tif (crucibleEvents.length < 1) {\r\n\t\tthrow new Error(`Couldn't find minting event for ${id}`);\r\n\t}\r\n\tconst block = await throttler.queue(() => {\r\n\t\treturn crucibleEvents[0].getBlock();\r\n\t}, 'block');\r\n\treturn block.timestamp * 1000;\r\n}\r\n\r\nexport default async function getCrucibleData(id) {\r\n\t// For faster loading, the async calls are launched at the same time, and the later awaited as required for subsequent stages\r\n\t// Unfortunately this means if the promises are rejected, they are considered unhandled by the JS runtime, because there can be a delay before they are awaited\r\n\t// To work around this we catch them, and resolve to the error, and then later check if their resolved value is an error and re-throw it\r\n\t// It ain't pretty but it works\r\n\tconst crucible = getContract({address: id, abi: contracts.Crucible.abi}, provider);\r\n\tconst ownerPromise = throttler.queue(() => {\r\n\t\treturn crucibleFactory.ownerOf(id);\r\n\t}).catch(err => err);\r\n\t// const balancePromise = throttler.queue(() => {\r\n\t// \treturn lpToken.balanceOf(crucible.address);\r\n\t// }).catch(err => err);\r\n\tconst lockedBalancePromise = throttler.queue(() => {\r\n\t\treturn crucible.getBalanceLocked(contracts.LPToken.address);\r\n\t}).catch(err => err);\r\n\tconst timestampPromise = getTimestamp(id).catch(err => err);\r\n\t// delegatedBalance is dependent on owner, so await it first\r\n\tconst owner = await ownerPromise;\r\n\tif (isError(owner)) {\r\n\t\tthrow owner;\r\n\t}\r\n\t// const delegatedBalancePromise = throttler.queue(() => {\r\n\t// \treturn crucible.getBalanceDelegated(contracts.LPToken.address, owner);\r\n\t// }, 'delegatedBalance').catch(err => err);\r\n\tconst resolveValues = await Promise.all([\r\n\t\t// balancePromise,\r\n\t\tlockedBalancePromise,\r\n\t\t// delegatedBalancePromise,\r\n\t\ttimestampPromise\r\n\t]);\r\n\tfor (const resolveValue of resolveValues) {\r\n\t\tif (isError(resolveValue)) {\r\n\t\t\tthrow resolveValue;\r\n\t\t}\r\n\t}\r\n\tconst [\r\n\t\t// balance,\r\n\t\tlockedBalance,\r\n\t\t// delegatedBalance,\r\n\t\ttimestamp\r\n\t] = resolveValues;\r\n\treturn {\r\n\t\tid,\r\n\t\towner,\r\n\t\t// balance,\r\n\t\tlockedBalance,\r\n\t\t// delegatedBalance,\r\n\t\ttimestamp\r\n\t};\r\n}\r\n","import {ethers} from 'ethers';\r\nimport contracts from './contracts/contracts.js';\r\nimport getContract from './getContract.js';\r\nimport getCrucibleData from './getCrucibleData.js';\r\nimport getCrucibleIdsFromEvents from './getCrucibleIdsFromEvents.js';\r\nimport throttler from './throttler.js';\r\n\r\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\r\nconst crucibleFactory = getContract(contracts.CrucibleFactory, provider);\r\n\r\nexport default async function getCrucibleDataForAccount(address, getCrucibleDataFunc = getCrucibleData) {\r\n\t// As far as I know, the only way to send a Crucible to another account involves call the \"safeTransferFrom\" method on the CrucibleFactory\r\n\t// This means that no matter how many times a Crucible has been passed from account to account, we can always find a Transfer event of this by querying the CrucibleFactory\r\n\t// Thus, filter Transfers by target address set to the account we're interested in\r\n\tconst filter = crucibleFactory.filters.Transfer(null, address);\r\n\tconst crucibleEvents = await throttler.queue(() => {\r\n\t\treturn crucibleFactory.queryFilter(filter, 0, \"latest\");\r\n\t}, 'events');\r\n\r\n\tconst crucibleIds = getCrucibleIdsFromEvents(crucibleEvents);\r\n\tconst crucibles = await Promise.all(crucibleIds.map(getCrucibleDataFunc));\r\n\r\n\t// There is the possibility that a Crucible has been transferred to an account which has transferred it on again to another\r\n\t// The initial filter doesn't distinguish this, so we filter again to remove Crucibles who report an owner different to the desired account address\r\n\treturn crucibles.filter((crucible) => {\r\n\t\treturn crucible.owner === address;\r\n\t});\r\n}\r\n","import convertTokenIdToAddress from './convertTokenIdToAddress.js';\r\nimport getAllCrucibleIds from './getAllCrucibleIds.js';\r\nimport getCrucibleData from './getCrucibleData.js';\r\nimport getCrucibleDataForAccount from './getCrucibleDataForAccount.js';\r\n\r\nclass CrucibleDataStore {\r\n\tconstructor() {\r\n\t\tthis._unloadedCrucibleIds = [];\r\n\t\tthis._pendingLoadPromises = new Map();\r\n\t\tthis._loadedCrucibles = new Map();\r\n\t\tthis._erroredCrucibles = new Map();\r\n\t\tthis._callbacks = new Set();\r\n\t\tthis._initPromise = this._init().catch(console.error);\r\n\t}\r\n\r\n\tget unloadedCount() {\r\n\t\treturn this._unloadedCrucibleIds.length;\r\n\t}\r\n\r\n\tget pendingCount() {\r\n\t\treturn this._pendingLoadPromises.size;\r\n\t}\r\n\r\n\tget loadedCount() {\r\n\t\treturn this._loadedCrucibles.size;\r\n\t}\r\n\r\n\tget erroredCount() {\r\n\t\treturn this._erroredCrucibles.size;\r\n\t}\r\n\r\n\tget crucibleCount() {\r\n\t\treturn this.unloadedCount + this.pendingCount + this.loadedCount;\r\n\t}\r\n\r\n\taddCrucibleLoadedCallback(callback) {\r\n\t\tthis._callbacks.add(callback);\r\n\t}\r\n\r\n\tremoveCrucibleLoadedCallback(callback) {\r\n\t\tthis._callbacks.delete(callback);\r\n\t}\r\n\r\n\tasync load(count = 1) {\r\n\t\tawait this._initPromise;\r\n\t\twhile (count > 0) {\r\n\t\t\tcount--;\r\n\t\t\tif (this.unloadedCount === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.getCrucibleData(this._unloadedCrucibleIds.shift());\r\n\t\t}\r\n\t}\r\n\r\n\tasync getCrucibleData(idOrObject) {\r\n\t\tlet id = idOrObject.id || idOrObject;\r\n\t\ttry {\r\n\t\t\tid = convertTokenIdToAddress(id);\r\n\t\t} catch (err) {\r\n\t\t\t// Don't care about the error if there is one\r\n\t\t}\r\n\t\tconst event = idOrObject.event || null;\r\n\t\tconst data = this._loadedCrucibles.get(id);\r\n\t\tif (data) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\tlet loadPromise = this._pendingLoadPromises.get(id);\r\n\t\tif (loadPromise) {\r\n\t\t\treturn loadPromise;\r\n\t\t}\r\n\t\tloadPromise = getCrucibleData(id)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tthis._pendingLoadPromises.delete(id);\r\n\t\t\t\tthis._loadedCrucibles.set(id, data);\r\n\t\t\t\tfor (const callback of this._callbacks) {\r\n\t\t\t\t\tcallback(data);\r\n\t\t\t\t}\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tthis._pendingLoadPromises.delete(id);\r\n\t\t\t\tthis._erroredCrucibles.set(id, {id, event, err});\r\n\t\t\t\treturn null;\r\n\t\t\t});\r\n\t\tthis._pendingLoadPromises.set(id, loadPromise);\r\n\t\treturn loadPromise;\r\n\t}\r\n\r\n\tgetAllLoadedCrucibleData() {\r\n\t\treturn Array.from(this._loadedCrucibles.values()).sort((a, b) => a.timestamp - b.timestamp);\r\n\t}\r\n\r\n\tgetCrucibleDataForAccount(address) {\r\n\t\treturn getCrucibleDataForAccount(address, this.getCrucibleData.bind(this));\r\n\t}\r\n\r\n\tasync getCrucibleDataForAccountOrCrucibleAddress(address) {\r\n\t\tconst [accountCrucibles, crucible] = await Promise.all([\r\n\t\t\tthis.getCrucibleDataForAccount(address).catch(() => {\r\n\t\t\t\treturn null;\r\n\t\t\t}),\r\n\t\t\tthis.getCrucibleData(address).catch(() => {\r\n\t\t\t\treturn null;\r\n\t\t\t})\r\n\t\t]);\r\n\t\tif (accountCrucibles && accountCrucibles.length) {\r\n\t\t\treturn accountCrucibles;\r\n\t\t}\r\n\t\tif (crucible) {\r\n\t\t\treturn [crucible];\r\n\t\t}\r\n\t\treturn [];\r\n\t}\r\n\r\n\tgetErroredCrucibles() {\r\n\t\treturn this._erroredCrucibles;\r\n\t}\r\n\r\n\tasync _init() {\r\n\t\tconst ids = await getAllCrucibleIds(true);\r\n\t\tfor (const id of ids) {\r\n\t\t\tthis._unloadedCrucibleIds.push(id);\r\n\t\t}\r\n\t\t// TODO set up listener for newly created Crucibles\r\n\t}\r\n}\r\n\r\nexport default new CrucibleDataStore();\r\n","import React, {useEffect, useRef, useState} from 'react';\nimport styles from './App.module.css';\nimport CrucibleList from './components/CrucibleList.jsx';\nimport crucibleDataStore from './crucibleData/crucibleDataStore.js';\n\n// For ease of debugging\nwindow.crucibleDataStore = crucibleDataStore;\n\nconst url = new URL(window.location.href);\nconst targetAddress = url.searchParams.get('at') || '';\n\nfunction updateUrl(address) {\n\tif (address) {\n\t\turl.searchParams.set('at', address);\n\t} else {\n\t\turl.searchParams.delete('at');\n\t}\n\twindow.history.replaceState({address}, '', url);\n}\n\nfunction App() {\n\tconst crucibleListRef = useRef(null);\n\tconst inputRef = useRef(null);\n\tconst [crucibles, setCrucibles] = useState([]);\n\tconst [filterAddress, setFilterAddress] = useState(targetAddress);\n\n\tconst checkShouldLoad = () => {\n\t\tif (filterAddress || !crucibleListRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tconst {scrollHeight, scrollTop, clientHeight} = crucibleListRef.current;\n\t\tconst distanceFromBottom = scrollHeight - clientHeight - scrollTop;\n\t\tconst threshold = window.innerHeight / 5;\n\t\tif (distanceFromBottom <= threshold) {\n\t\t\tconst extraCount = 10 - crucibleDataStore.pendingCount;\n\t\t\tif (extraCount > 0) {\n\t\t\t\tcrucibleDataStore.load(extraCount);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst filterByAddress = (address) => {\n\t\tcrucibleDataStore.getCrucibleDataForAccountOrCrucibleAddress(address)\n\t\t\t.then((crucibles) => {\n\t\t\t\tsetCrucibles(crucibles);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t});\n\t};\n\n\tconst loadedCount = crucibleDataStore.loadedCount;\n\tuseEffect(() => {\n\t\tif (filterAddress) {\n\t\t\tfilterByAddress(filterAddress)\n\t\t\treturn;\n\t\t}\n\t\tconst crucibleLoadedCallback = () => {\n\t\t\tsetCrucibles(crucibleDataStore.getAllLoadedCrucibleData());\n\t\t};\n\t\tcrucibleDataStore.addCrucibleLoadedCallback(crucibleLoadedCallback);\n\t\tcheckShouldLoad();\n\t\treturn function cleanup() {\n\t\t\tcrucibleDataStore.removeCrucibleLoadedCallback(crucibleLoadedCallback);\n\t\t}\n\t}, [loadedCount, filterAddress]);\n\n\n\tconst onScroll = () => {\n\t\tcheckShouldLoad();\n\t};\n\n\tconst onChange = (e) => {\n\t\tconst address = e.target.value;\n\t\tupdateUrl(address);\n\t\tsetFilterAddress(address);\n\t};\n\n\tconst onClick = () => {\n\t\tconst address = '';\n\t\tupdateUrl(address);\n\t\tsetFilterAddress(address);\n\t};\n\n\treturn (\n\t\t<div className={styles.main}>\n\t\t\t<div className={styles.header}>\n\t\t\t\t<input className={styles.input} ref={inputRef} type=\"text\" onChange={onChange}\n\t\t\t\t\t   value={filterAddress} placeholder=\"Enter account or Crucible address\"/>\n\t\t\t\t<span className={styles.clearButton} onClick={onClick}>Clear</span>\n\t\t\t</div>\n\t\t\t<CrucibleList crucibles={crucibles} passedRef={crucibleListRef} onScroll={onScroll}/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Crucible_main__3pmJA\",\"stats\":\"Crucible_stats__1NRGI\",\"lensContainer\":\"Crucible_lensContainer__2jOdl\",\"lensBackgroundContainer\":\"Crucible_lensBackgroundContainer__1xazW\",\"lensBackground\":\"Crucible_lensBackground__3dSZt\",\"pulse\":\"Crucible_pulse__1L-1k\",\"symbolMain\":\"Crucible_symbolMain__2WqP6\",\"symbol\":\"Crucible_symbol__NI7TE\",\"rotate\":\"Crucible_rotate__2noba\",\"spin\":\"Crucible_spin__3WB_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__2G1gg\",\"header\":\"App_header__2hYk_\",\"input\":\"App_input__3hw3F\",\"clearButton\":\"App_clearButton__110o2\"};","/*\r\nCopyright (c) 2014 Andreas Madsen & Emil Bay\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n// Code from https://github.com/AndreasMadsen/xorshift with minor edits to export structure\r\n\r\n/**\r\n * Create a pseudorandom number generator, with a seed.\r\n * @param {array} seed \"128-bit\" integer, composed of 4x32-bit\r\n * integers in big endian order.\r\n */\r\nfunction XorShift(seed) {\r\n\t// Note the extension, this === module.exports is required because\r\n\t// the `constructor` function will be used to generate new instances.\r\n\t// In that case `this` will point to the default RNG, and `this` will\r\n\t// be an instance of XorShift.\r\n\tif (!(this instanceof XorShift) || this === module.exports) {\r\n\t\treturn new XorShift(seed);\r\n\t}\r\n\r\n\tif (!Array.isArray(seed) || seed.length !== 4) {\r\n\t\tthrow new TypeError('seed must be an array with 4 numbers');\r\n\t}\r\n\r\n\t// uint64_t s = [seed ...]\r\n\tthis._state0U = seed[0] | 0;\r\n\tthis._state0L = seed[1] | 0;\r\n\tthis._state1U = seed[2] | 0;\r\n\tthis._state1L = seed[3] | 0;\r\n}\r\n\r\n/**\r\n * Returns a 64bit random number as a 2x32bit array\r\n * @return {array}\r\n */\r\nXorShift.prototype.randomint = function() {\r\n\t// uint64_t s1 = s[0]\r\n\tvar s1U = this._state0U, s1L = this._state0L;\r\n\t// uint64_t s0 = s[1]\r\n\tvar s0U = this._state1U, s0L = this._state1L;\r\n\r\n\t// result = s0 + s1\r\n\tvar sumL = (s0L >>> 0) + (s1L >>> 0);\r\n\tvar resU = (s0U + s1U + (sumL / 2 >>> 31)) >>> 0;\r\n\tvar resL = sumL >>> 0;\r\n\r\n\t// s[0] = s0\r\n\tthis._state0U = s0U;\r\n\tthis._state0L = s0L;\r\n\r\n\t// - t1 = [0, 0]\r\n\tvar t1U = 0, t1L = 0;\r\n\t// - t2 = [0, 0]\r\n\tvar t2U = 0, t2L = 0;\r\n\r\n\t// s1 ^= s1 << 23;\r\n\t// :: t1 = s1 << 23\r\n\tvar a1 = 23;\r\n\tvar m1 = 0xFFFFFFFF << (32 - a1);\r\n\tt1U = (s1U << a1) | ((s1L & m1) >>> (32 - a1));\r\n\tt1L = s1L << a1;\r\n\t// :: s1 = s1 ^ t1\r\n\ts1U = s1U ^ t1U;\r\n\ts1L = s1L ^ t1L;\r\n\r\n\t// t1 = ( s1 ^ s0 ^ ( s1 >> 17 ) ^ ( s0 >> 26 ) )\r\n\t// :: t1 = s1 ^ s0\r\n\tt1U = s1U ^ s0U;\r\n\tt1L = s1L ^ s0L;\r\n\t// :: t2 = s1 >> 18\r\n\tvar a2 = 18;\r\n\tvar m2 = 0xFFFFFFFF >>> (32 - a2);\r\n\tt2U = s1U >>> a2;\r\n\tt2L = (s1L >>> a2) | ((s1U & m2) << (32 - a2));\r\n\t// :: t1 = t1 ^ t2\r\n\tt1U = t1U ^ t2U;\r\n\tt1L = t1L ^ t2L;\r\n\t// :: t2 = s0 >> 5\r\n\tvar a3 = 5;\r\n\tvar m3 = 0xFFFFFFFF >>> (32 - a3);\r\n\tt2U = s0U >>> a3;\r\n\tt2L = (s0L >>> a3) | ((s0U & m3) << (32 - a3));\r\n\t// :: t1 = t1 ^ t2\r\n\tt1U = t1U ^ t2U;\r\n\tt1L = t1L ^ t2L;\r\n\r\n\t// s[1] = t1\r\n\tthis._state1U = t1U;\r\n\tthis._state1L = t1L;\r\n\r\n\t// return result\r\n\treturn [resU, resL];\r\n};\r\n\r\n/**\r\n * Returns a random number normalized [0, 1), just like Math.random()\r\n * @return {number}\r\n */\r\nXorShift.prototype.random = function() {\r\n\tvar t2 = this.randomint();\r\n\t// Math.pow(2, -32) = 2.3283064365386963e-10\r\n\t// Math.pow(2, -52) = 2.220446049250313e-16\r\n\treturn t2[0] * 2.3283064365386963e-10 + (t2[1] >>> 12) * 2.220446049250313e-16;\r\n};\r\n\r\n// // Seed with Math.random() by default to prevent seed collision\r\n// function getRandomSeed() {\r\n// \treturn Math.random() * Math.pow(2, 32);\r\n// }\r\n// module.exports = new XorShift([\r\n// \tgetRandomSeed(),\r\n// \tgetRandomSeed(),\r\n// \tgetRandomSeed(),\r\n// \tgetRandomSeed()\r\n// ]);\r\n\r\nexport default XorShift;\r\n"],"sourceRoot":""}